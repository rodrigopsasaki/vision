name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Run in dry-run mode'
        type: boolean
        default: false

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Nx can use it for affected detection
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable pnpm via corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Git configuration
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4

      - name: Build affected packages
        run: npx nx affected -t build

      - name: Test affected packages
        run: npx nx affected -t test

      - name: Lint affected packages
        run: npx nx affected -t lint

      - name: Version packages and create changelog
        run: |
          if [ "${{ github.event.inputs.dryRun }}" = "true" ]; then
            npx nx release version --dry-run
            npx nx release changelog --dry-run
          else
            npx nx release version
            npx nx release changelog
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages
        if: github.event.inputs.dryRun != 'true'
        run: npx nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}