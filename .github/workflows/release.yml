name: CI and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Run in dry-run mode'
        type: boolean
        default: false

permissions:
  actions: read
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable pnpm via corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v4

      - name: Build affected
        run: npx nx affected -t build

      - name: Lint affected
        run: npx nx affected -t lint

      - name: Test affected
        run: npx nx affected -t test

      - name: Spellcheck affected
        run: npx nx affected -t spellcheck

  release:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # This makes Actions fetch all Git history so that Nx can use it for affected detection
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable pnpm via corepack
        run: corepack enable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Git configuration
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Create release
        run: |
          DRY_RUN="${{ github.event.inputs.dryRun || 'false' }}"
          if [ "$DRY_RUN" = "true" ]; then
            npx nx release --dry-run --skip-publish
          else
            npx nx release --skip-publish
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish packages
        if: ${{ (github.event.inputs.dryRun || 'false') != 'true' }}
        run: npx nx release publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}